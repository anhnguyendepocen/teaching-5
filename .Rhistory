file = file.path("ss17", "electoral_authoritarianism", "07", "grades_development.pdf"),
width = 7, height = 7/1.618
)
library('lme4')
fit <- lmer(
value ~ (1 | student_id) + (1 | session), data = student_data
)
ranef(fit)
plot(density(ranef(fit)[['student_id']][, 1]))
plot(density(ranef(fit)[['session']][, 1]))
p_export <- ggplot(data = student_data, aes(x = t, y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
scale_x_continuous(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light()
p_export
p_export <- ggplot(data = student_data, aes(x = t, y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
scale_x_discrete(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light()
p_export
p_export <- ggplot(data = student_data, aes(x = t, y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
scale_x_discrete(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light() +
theme(axis.text.x = element_text())
p_export
p_export <- ggplot(data = student_data, aes(x = t, y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
#scale_x_discrete(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light() +
theme(axis.text.x = element_text())
p_export
p_export <- ggplot(data = student_data, aes(x = factor(t), y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
#scale_x_discrete(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light() +
theme(axis.text.x = element_text())
p_export
p_export <- ggplot(data = student_data, aes(x = factor(t), y = value)) +
geom_jitter(position = position_jitter(width = .02, height = 0)) +
stat_summary(fun.data = mean_cl_normal, fun.args = list(conf.int = .9), colour = "maroon") +
scale_x_discrete(labels = c("1" = "08.05.", "2" = "15.05.", "3" = "22.05.", "4" = "29.05.", "5" = "12.06.", "6" = "19.06.")) +
labs(
y = "Note", x = "Sitzung",
title = "Bewertungsentwicklung",
subtitle = "Die Auswertung berücksichtigt 77 Zusammenfassungen.\nMittelwert und Konfidenzintervalle (alpha = 0.1) werden rot dargestellt."
) +
theme_light() +
theme(axis.text.x = element_text())
p_export
length(!is.na(grades))
source('~/github/teaching/ss17/electoral_authoritarianism/grades_development.R', echo=TRUE)
source('~/github/teaching/ss17/electoral_authoritarianism/grades_development.R', echo=TRUE)
source('~/github/teaching/ss17/electoral_authoritarianism/grades_development.R', echo=TRUE)
getwd()
source('~/github/teaching/ss17/electoral_authoritarianism/grades_development.R', echo=TRUE)
source('~/github/teaching/ss17/electoral_authoritarianism/grades_development.R', echo=TRUE)
fit <- lmer(
value ~ (1 | student_id) + (1 | session), data = student_data
)
ranef(fit)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
abline(v = 3); abline(h = .5)
source('~/.active-rstudio-document', echo=TRUE)
N <- 100
y_bin <- rbinom(N, 1)
y_bin <- rbinom(N, 1, prob = .5)
summary(y_bin)
N <- 100
x <- rnorm(N)
y_logit <- .2 * x + rnorm()
y_logit <- .2 * x + rnorm(N)
y_bin <- boot::inv.logit(y_logit)
histogram(y_logit)
hist(y_logit)
hist(y_bin)
N <- 100
x <- rnorm(N)
y_logit <- .2 * x
y_bin <- boot::inv.logit(y_logit)
y_bin <- rbinom(N, 1, prob = y_bin)
summary(y_bin)
plot(x, y_bin)
lowess(y_bin ~ x)
lines(lowess(y_bin ~ x))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
lm_fit <- lm(y_bin ~ x)
yhat <- predict(lm_fit)
summary(yhat)
source('~/.active-rstudio-document', echo=TRUE)
plot(x, yhat)
plot(x, yhat, type = 'l')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
points(x, y_bin)
ggplot(data = data.frame(x, yhat, y_bin), aes(x = x)) +
geom_point(aes(y = y_bin)) +
geom_line(aes(y = yhat))
pi
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = data.frame(x, yhat, y_bin), aes(x = x)) +
geom_point(aes(y = y_bin, colour = factor(ifelse(yhat > 1 | yhat < 0))) +
geom_line(aes(y = yhat))
)
ggplot(data = data.frame(x, yhat, y_bin), aes(x = x)) +
geom_point(aes(y = y_bin, colour = factor(ifelse(yhat > 1 | yhat < 0)))) +
geom_line(aes(y = yhat))
ggplot(data = data.frame(x, yhat, y_bin), aes(x = x)) +
geom_point(aes(y = y_bin, colour = factor(ifelse(yhat > 1 | yhat < 0, 1, 0)))) +
geom_line(aes(y = yhat))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = data.frame(x, yhat, y_bin), aes(x = x)) +
geom_point(aes(y = y_bin, colour = factor(ifelse(yhat > 1 | yhat < 0, 1, 0)))) +
geom_line(aes(y = yhat)) + geom_point(aes(y = yhat))
summary(yhat)
yhat_glm <- predict(glm(y_bin ~ x, family = binomial(link = 'logit')))
ggplot(data = data.frame(x, yhat, y_bin, yhat_glm), aes(x = x)) +
geom_point(aes(y = y_bin, colour = factor(ifelse(yhat > 1 | yhat < 0, 1, 0)))) +
geom_line(aes(y = yhat)) + geom_point(aes(y = yhat))
source('~/.active-rstudio-document', echo=TRUE)
?predict
yhat_glm <- predict(glm(y_bin ~ x, family = binomial(link = 'logit')), type = "response")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
curve(decay(x, alpha = 2), from = 0, 99, col = 'red')
curve(decay(x), from = 0, 99)
curve(decay(x, alpha = 2), from = 0, 99, col = 'red')
curve(decay(x), from = 0, 99)
curve(decay(x, alpha = 2), from = 0, 99, col = 'red', add = TRUE)
curve(decay(x, alpha = 1), from = 0, 99, col = 'red', add = TRUE)
decay <- function(x, alpha = 4.328){ exp(-x/alpha) }
curve(decay(x), from = 0, 99)
for(i in c(1, 2, 3, 5))
curve(decay(x, alpha = i), from = 0, 99, col = i+1, add = TRUE)
}
curve(decay(x), from = 0, 99)
for(i in c(1, 2, 3, 5)) {
curve(decay(x, alpha = i), from = 0, 99, col = i+1, add = TRUE)
}
abline(v = 3); abline(h = .5)
set.seed(23501)
N <- 1000
x <- rnorm(N)
y_logit <- 1.6 * x
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/github/teaching/ss17/democratic_peace/10/demo_logistischeRegression.R', echo=TRUE)
source('~/github/teaching/ss17/democratic_peace/10/demo_logistischeRegression.R', echo=TRUE)
N <- 1000
x <- rnorm(N)
y_logit <- 1.6 * x
pr_y <- boot::inv.logit(y_logit)
y_bin <- rbinom(N, 1, prob = pr_y)
summary(y_bin)
lm_fit <- lm(y_bin ~ x)
yhat <- predict(lm_fit)
yhat_glm <- predict(glm(y_bin ~ x, family = binomial(link = 'logit')), type = "response")
ggplot(data = data.frame(x, yhat, y_bin, yhat_glm), aes(x = x)) +
geom_point(
aes(
y = y_bin,
colour = factor(
ifelse(yhat > 0 & yhat < 1, 1, 0),
labels = c("Nein", "Ja")
)
)
) +
geom_rug() +
geom_line(aes(y = yhat), linetype = 'dashed') +
geom_line(aes(y = yhat_glm)) +
labs(
x = "x",
y = "Pr(y = 1 | x)",
color = expression(
"Vorhersagewert" %in% group("[",list(0, 1),"]"))
) +
theme(legend.position = "top")
averages <- abs_votes %*% solve(t(imperiali))
source('~/.active-rstudio-document', echo=TRUE)
averages <- abs_votes %*%
1/(t(imperiali))
averages <- abs_votes %*%
1/(imperiali)
abs_votes /imperial
abs_votes /imperiali
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats, byrow = TRUE
)
set.seed(3259)
n_party <- 6
n_seats <- 10
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats, byrow = TRUE
)
n_seats <- 10
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats, ncol = n_party, byrow = TRUE
)
abs_votes
averages <- apply(abs_votes, 2, function(x){x/imperiali})
averages
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
averages
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(NULL, paste('Partei', LETTERS[1:n_party]))
)
imperiali <- 2:n_seats
averages <- apply(abs_votes, 2, function(x){x/imperiali})
averages
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
source('~/.active-rstudio-document', echo=TRUE)
order(averages)
unlist(averages[order(averages)])
unlist(averages)[order(averages)]
unlist(averages)[order(averages, decreasing = TRUE)]
unlist(averages)[order(averages, decreasing = TRUE)][1:10]
unlist(averages)[order(averages, decreasing = TRUE)][1:n_seats]
averages[order(averages, decreasing = TRUE)]
averages
averages[order(averages, decreasing = TRUE), ]
order(averages, decreasing = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
abs_votes %*% imperiali
abs_votes %*% t(imperiali)
imperiali %*% abs_votes
imperiali %*% t(abs_votes)
t(imperiali) %*% abs_votes
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
t(imperiali) %*% abs_votes
imperiali <- 1/(2:n_seats)
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
t(imperiali) %*% abs_votes
imperiali
imperiali %*% abs_votes
outer(imperiali, abs_votes, '*')
outer(abs_votes, imperiali, '*')
inner(abs_votes, imperiali, '*')
Matrix::crossprod(abs_votes, imperiali, '*')
Matrix::crossprod(abs_votes, imperiali)
Matrix::crossprod(imperiali, abs_votes)
imperiali <-
diag(1/(2:n_seats), nrow = n_seats-1)
imperiali
imperiali <- diag(2:n_seats), nrow = n_seats-1)
imperiali <- diag(2:n_seats, nrow = n_seats-1)
imperiali
solve(imperiali)
imperiali <- diag(2:n_seats, nrow = n_seats-1)
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
imperiali <- diag(2:n_seats, nrow = n_seats-1)
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", imperiali),
paste('Partei', LETTERS[1:n_party])
)
)
abs_votes <- matrix(
c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", diag(imperiali)),
paste('Partei', LETTERS[1:n_party])
)
)
abs_votes %*% imperiali
abs_votes %*% t(imperiali)
t(imperiali) %*% abs_votes
t(solve(imperiali)) %*% abs_votes
abs_votes <- matrix(
runif(n_party, vote_range[1], vote_range[2] - vote_range[1])
# c(47000, 16000, 15900, 12000, 6000, 3100),
nrow = n_seats-1, ncol = n_party, byrow = TRUE,
dimnames = list(
paste("Divisor", diag(imperiali)),
paste('Partei', LETTERS[1:n_party])
)
)
runif(n_party, vote_range[1], vote_range[2] - vote_range[1])
set.seed(3259)
n_party <- 6
n_seats <- 10
vote_range <- c(1500, 12000)
imperiali <- diag(2:n_seats, nrow = n_seats-1)
runif(n_party, vote_range[1], vote_range[2] - vote_range[1])
??round
vote_range[1] + trunc((vote_range[2] - vote_range[1]) * runif(n_party))
set.seed(3259)
n_party <- 6
n_seats <- 10
vote_range <- c(1500, 120000)
imperiali <- diag(2:n_seats, nrow = n_seats-1)
vote_range[1] + trunc((vote_range[2] - vote_range[1]) * runif(n_party))
source('~/.active-rstudio-document', echo=TRUE)
averages
colnames(averages)
colnames(averages[order(averages, decreasing = TRUE)])
colnames(averages[order(averages, decreasing = TRUE), ])
averages[order(averages, decreasing = TRUE), ]
averages[order(averages, decreasing = TRUE), 1]
order(averages, decreasing = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
order(averages)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
which.max(averages)
seat_matrix <- vector(0, length = length(abs_votes))
seat_matrix <- vector('numeric', length = length(abs_votes))
source('~/.active-rstudio-document', echo=TRUE)
averages
dotchart(abs_votes[1, ])
source('~/.active-rstudio-document', echo=TRUE)
unlist(averages)
abs_seats <- matrix(0, nrow = seats-1, ncol = n_party)
abs_seats <- matrix(0, nrow = n_seats-1, ncol = n_party)
abs_seats <- matrix(0, nrow = n_seats-1, ncol = n_party)
unlist(averages)
abs_seats
abs_seats[order(averages, decreasing = TRUE)] <- 1
abs_seats
source('~/.active-rstudio-document', echo=TRUE)
abs_seats
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
colSums(abs_seats)
source('~/.active-rstudio-document', echo=TRUE)
dotchart(abs_votes[1, ])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dotchart(colSums(abs_seats))
dotchart(abs_votes[1, ])
dotchart(colSums(abs_seats), add = TRUE)
?dotchart
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ],
abs_seats = colSums(abs_seats)
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes))
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ],
abs_seats = colSums(abs_seats)
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes), stat = ..density..)
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ] / rowSums(abs_votes[1, ]),
abs_seats = colSums(abs_seats) / sum(colSums(abs_seats))
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes))
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ] / sums(abs_votes[1, ]),
abs_seats = colSums(abs_seats) / sum(colSums(abs_seats))
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes))
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ] / sum(abs_votes[1, ]),
abs_seats = colSums(abs_seats) / sum(colSums(abs_seats))
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes))
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ] / sum(abs_votes[1, ]),
abs_seats = colSums(abs_seats) / sum(colSums(abs_seats))
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes)) +
geom_point(aes(y = abs_seats)) +
dotchart(abs_votes[1, ])
ggplot(
data = data.frame(
partei = colnames(abs_votes),
abs_votes = abs_votes[1, ] / sum(abs_votes[1, ]),
abs_seats = colSums(abs_seats) / sum(colSums(abs_seats))
),
aes(x = partei)
) +
geom_point(aes(y = abs_votes)) +
geom_point(aes(y = abs_seats), colour = 'red') +
dotchart(abs_votes[1, ])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/github/teaching/ss17/electoral_authoritarianism/10/demoVerrechnungsverfahren.R', echo=TRUE)
